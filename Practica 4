{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": [],
      "authorship_tag": "ABX9TyMkdqvCm3DMR4MWHNaMHlL9",
      "include_colab_link": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/NAvilCap/Probabilidad1/blob/main/Practica%204\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "##Tablas de frecuencias"
      ],
      "metadata": {
        "id": "9n9dyFMcoiSE"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "import random\n",
        "#libreria de python para graficar valores\n",
        "import matplotlib.pyplot as plt"
      ],
      "metadata": {
        "id": "RDrFfWzmpjch"
      },
      "execution_count": 62,
      "outputs": []
    },
    {
      "cell_type": "code",
      "execution_count": 25,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "TS4sCoiwmr4O",
        "outputId": "6d518b0f-ce67-40ad-ca66-2b7d9d2fdd4f"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[43]\n",
            "[43, 96]\n",
            "[43, 96, 47]\n",
            "[43, 96, 47, 71]\n",
            "[43, 96, 47, 71, 67]\n",
            "[43, 96, 47, 71, 67, 39]\n",
            "[43, 96, 47, 71, 67, 39, 39]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55, 76]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55, 76, 29]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55, 76, 29, 86]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55, 76, 29, 86, 74]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55, 76, 29, 86, 74, 30]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55, 76, 29, 86, 74, 30, 96]\n",
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55, 76, 29, 86, 74, 30, 96, 88]\n"
          ]
        }
      ],
      "source": [
        "edades=[]\n",
        "for i in range(100):\n",
        "   numero_aleatorio=random.randint(18,100)\n",
        "   edades.append(numero_aleatorio)\n",
        "\n",
        "   print(edades)"
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "import pandas as pd\n"
      ],
      "metadata": {
        "id": "mVCiw2ceoar3"
      },
      "execution_count": 27,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "df_edades=pd.DataFrame (edades, columns=[\"edad\"])\n",
        "df_edades"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "8N4RfeIjoaxK",
        "outputId": "f8c8ed34-2262-4447-fb30-7a7439acbc91"
      },
      "execution_count": 28,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    edad\n",
              "0     43\n",
              "1     96\n",
              "2     47\n",
              "3     71\n",
              "4     67\n",
              "..   ...\n",
              "95    86\n",
              "96    74\n",
              "97    30\n",
              "98    96\n",
              "99    88\n",
              "\n",
              "[100 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d7be1542-a0f4-4b70-9613-361490a99a20\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>edad</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 1 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d7be1542-a0f4-4b70-9613-361490a99a20')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d7be1542-a0f4-4b70-9613-361490a99a20 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d7be1542-a0f4-4b70-9613-361490a99a20');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-ecbdd06f-da1b-48be-8d00-6248f9b9f2dd\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-ecbdd06f-da1b-48be-8d00-6248f9b9f2dd')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-ecbdd06f-da1b-48be-8d00-6248f9b9f2dd button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_edades",
              "summary": "{\n  \"name\": \"df_edades\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 18,\n        \"max\": 99,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          43,\n          39,\n          45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 28
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##Calcular la tabla de frecuencias\n",
        "tabla_frecuencias=df_edades[\"edad\"].value_counts().reset_index()\n",
        "tabla_frecuencias.columns= [\"edad\",\"frecuencias\"]\n",
        "tabla_frecuencias=tabla_frecuencias.sort_values(by=\"edad\")\n",
        "tabla_frecuencias"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "TPwiocjroa0K",
        "outputId": "e28afe6f-d049-4374-8d63-ee744d5365f1"
      },
      "execution_count": 36,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    edad  frecuencias\n",
              "27    18            1\n",
              "32    19            1\n",
              "8     20            3\n",
              "45    22            1\n",
              "51    23            1\n",
              "53    26            1\n",
              "5     28            3\n",
              "9     29            2\n",
              "26    30            2\n",
              "36    32            1\n",
              "18    33            2\n",
              "25    34            2\n",
              "33    35            1\n",
              "17    36            2\n",
              "48    38            1\n",
              "2     39            4\n",
              "49    40            1\n",
              "21    42            2\n",
              "41    43            1\n",
              "55    44            1\n",
              "58    45            1\n",
              "10    46            2\n",
              "22    47            2\n",
              "16    48            2\n",
              "42    49            1\n",
              "56    50            1\n",
              "6     52            3\n",
              "29    53            1\n",
              "20    55            2\n",
              "3     56            3\n",
              "47    57            1\n",
              "54    58            1\n",
              "12    59            2\n",
              "11    60            2\n",
              "52    61            1\n",
              "28    62            1\n",
              "35    63            1\n",
              "40    64            1\n",
              "13    66            2\n",
              "0     67            5\n",
              "38    69            1\n",
              "44    71            1\n",
              "24    72            2\n",
              "39    74            1\n",
              "1     76            4\n",
              "15    77            2\n",
              "7     78            3\n",
              "31    79            1\n",
              "50    81            1\n",
              "19    83            2\n",
              "34    84            1\n",
              "37    85            1\n",
              "23    86            2\n",
              "59    88            1\n",
              "4     89            3\n",
              "46    91            1\n",
              "43    93            1\n",
              "14    96            2\n",
              "30    97            1\n",
              "57    99            1"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-29e29284-d3c4-449d-b26f-242f0bc12d55\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>edad</th>\n",
              "      <th>frecuencias</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>19</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>20</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>22</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>26</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>28</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>29</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>30</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>33</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>34</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>35</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>36</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>38</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>39</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>40</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>43</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>46</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>48</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>49</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>50</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>52</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>53</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>55</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>56</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>57</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>58</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>59</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>60</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>61</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>62</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>63</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>64</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>66</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>67</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>69</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>71</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>72</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>74</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>76</td>\n",
              "      <td>4</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>77</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>78</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>79</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>81</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>83</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>84</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>85</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>86</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>88</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>89</td>\n",
              "      <td>3</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>91</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>93</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>96</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>97</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>99</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-29e29284-d3c4-449d-b26f-242f0bc12d55')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-29e29284-d3c4-449d-b26f-242f0bc12d55 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-29e29284-d3c4-449d-b26f-242f0bc12d55');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-9254c43c-aaae-499e-84ce-4b7f6a21a5e2\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9254c43c-aaae-499e-84ce-4b7f6a21a5e2')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-9254c43c-aaae-499e-84ce-4b7f6a21a5e2 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tabla_frecuencias",
              "summary": "{\n  \"name\": \"tabla_frecuencias\",\n  \"rows\": 60,\n  \"fields\": [\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 18,\n        \"max\": 99,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          18,\n          26,\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frecuencias\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 36
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tabla_frecuencias[\"frec. Relativa\"]=tabla_frecuencias[\"frecuencias\"]/100\n",
        "tabla_frecuencias[\"frecuencias %\"]=tabla_frecuencias['frecuencias']/100*100\n",
        "print(tabla_frecuencias)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "emBsuc0Zoa5R",
        "outputId": "62b32b74-7b12-4575-8381-35d2506966ee"
      },
      "execution_count": 42,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "    edad  frecuencias  frec. Relativa  frecuencias %\n",
            "27    18            1            0.01            1.0\n",
            "32    19            1            0.01            1.0\n",
            "8     20            3            0.03            3.0\n",
            "45    22            1            0.01            1.0\n",
            "51    23            1            0.01            1.0\n",
            "53    26            1            0.01            1.0\n",
            "5     28            3            0.03            3.0\n",
            "9     29            2            0.02            2.0\n",
            "26    30            2            0.02            2.0\n",
            "36    32            1            0.01            1.0\n",
            "18    33            2            0.02            2.0\n",
            "25    34            2            0.02            2.0\n",
            "33    35            1            0.01            1.0\n",
            "17    36            2            0.02            2.0\n",
            "48    38            1            0.01            1.0\n",
            "2     39            4            0.04            4.0\n",
            "49    40            1            0.01            1.0\n",
            "21    42            2            0.02            2.0\n",
            "41    43            1            0.01            1.0\n",
            "55    44            1            0.01            1.0\n",
            "58    45            1            0.01            1.0\n",
            "10    46            2            0.02            2.0\n",
            "22    47            2            0.02            2.0\n",
            "16    48            2            0.02            2.0\n",
            "42    49            1            0.01            1.0\n",
            "56    50            1            0.01            1.0\n",
            "6     52            3            0.03            3.0\n",
            "29    53            1            0.01            1.0\n",
            "20    55            2            0.02            2.0\n",
            "3     56            3            0.03            3.0\n",
            "47    57            1            0.01            1.0\n",
            "54    58            1            0.01            1.0\n",
            "12    59            2            0.02            2.0\n",
            "11    60            2            0.02            2.0\n",
            "52    61            1            0.01            1.0\n",
            "28    62            1            0.01            1.0\n",
            "35    63            1            0.01            1.0\n",
            "40    64            1            0.01            1.0\n",
            "13    66            2            0.02            2.0\n",
            "0     67            5            0.05            5.0\n",
            "38    69            1            0.01            1.0\n",
            "44    71            1            0.01            1.0\n",
            "24    72            2            0.02            2.0\n",
            "39    74            1            0.01            1.0\n",
            "1     76            4            0.04            4.0\n",
            "15    77            2            0.02            2.0\n",
            "7     78            3            0.03            3.0\n",
            "31    79            1            0.01            1.0\n",
            "50    81            1            0.01            1.0\n",
            "19    83            2            0.02            2.0\n",
            "34    84            1            0.01            1.0\n",
            "37    85            1            0.01            1.0\n",
            "23    86            2            0.02            2.0\n",
            "59    88            1            0.01            1.0\n",
            "4     89            3            0.03            3.0\n",
            "46    91            1            0.01            1.0\n",
            "43    93            1            0.01            1.0\n",
            "14    96            2            0.02            2.0\n",
            "30    97            1            0.01            1.0\n",
            "57    99            1            0.01            1.0\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tabla_frecuencias"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "4MSyeWU7oa9O",
        "outputId": "f05cf7fd-f056-4c78-d24e-2797520ccac9"
      },
      "execution_count": 43,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    edad  frecuencias  frec. Relativa  frecuencias %\n",
              "27    18            1            0.01            1.0\n",
              "32    19            1            0.01            1.0\n",
              "8     20            3            0.03            3.0\n",
              "45    22            1            0.01            1.0\n",
              "51    23            1            0.01            1.0\n",
              "53    26            1            0.01            1.0\n",
              "5     28            3            0.03            3.0\n",
              "9     29            2            0.02            2.0\n",
              "26    30            2            0.02            2.0\n",
              "36    32            1            0.01            1.0\n",
              "18    33            2            0.02            2.0\n",
              "25    34            2            0.02            2.0\n",
              "33    35            1            0.01            1.0\n",
              "17    36            2            0.02            2.0\n",
              "48    38            1            0.01            1.0\n",
              "2     39            4            0.04            4.0\n",
              "49    40            1            0.01            1.0\n",
              "21    42            2            0.02            2.0\n",
              "41    43            1            0.01            1.0\n",
              "55    44            1            0.01            1.0\n",
              "58    45            1            0.01            1.0\n",
              "10    46            2            0.02            2.0\n",
              "22    47            2            0.02            2.0\n",
              "16    48            2            0.02            2.0\n",
              "42    49            1            0.01            1.0\n",
              "56    50            1            0.01            1.0\n",
              "6     52            3            0.03            3.0\n",
              "29    53            1            0.01            1.0\n",
              "20    55            2            0.02            2.0\n",
              "3     56            3            0.03            3.0\n",
              "47    57            1            0.01            1.0\n",
              "54    58            1            0.01            1.0\n",
              "12    59            2            0.02            2.0\n",
              "11    60            2            0.02            2.0\n",
              "52    61            1            0.01            1.0\n",
              "28    62            1            0.01            1.0\n",
              "35    63            1            0.01            1.0\n",
              "40    64            1            0.01            1.0\n",
              "13    66            2            0.02            2.0\n",
              "0     67            5            0.05            5.0\n",
              "38    69            1            0.01            1.0\n",
              "44    71            1            0.01            1.0\n",
              "24    72            2            0.02            2.0\n",
              "39    74            1            0.01            1.0\n",
              "1     76            4            0.04            4.0\n",
              "15    77            2            0.02            2.0\n",
              "7     78            3            0.03            3.0\n",
              "31    79            1            0.01            1.0\n",
              "50    81            1            0.01            1.0\n",
              "19    83            2            0.02            2.0\n",
              "34    84            1            0.01            1.0\n",
              "37    85            1            0.01            1.0\n",
              "23    86            2            0.02            2.0\n",
              "59    88            1            0.01            1.0\n",
              "4     89            3            0.03            3.0\n",
              "46    91            1            0.01            1.0\n",
              "43    93            1            0.01            1.0\n",
              "14    96            2            0.02            2.0\n",
              "30    97            1            0.01            1.0\n",
              "57    99            1            0.01            1.0"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-0edd904c-9217-4174-9b06-7fbb1ff409ce\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>edad</th>\n",
              "      <th>frecuencias</th>\n",
              "      <th>frec. Relativa</th>\n",
              "      <th>frecuencias %</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>19</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>20</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>22</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>26</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>28</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>29</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>30</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>33</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>34</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>35</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>36</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>38</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>39</td>\n",
              "      <td>4</td>\n",
              "      <td>0.04</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>40</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>43</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>46</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>48</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>49</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>50</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>52</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>53</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>55</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>56</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>57</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>58</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>59</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>60</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>61</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>62</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>63</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>64</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>66</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>67</td>\n",
              "      <td>5</td>\n",
              "      <td>0.05</td>\n",
              "      <td>5.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>69</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>71</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>72</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>74</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>76</td>\n",
              "      <td>4</td>\n",
              "      <td>0.04</td>\n",
              "      <td>4.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>77</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>78</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>79</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>81</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>83</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>84</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>85</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>86</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>88</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>89</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>91</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>93</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>96</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>97</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>99</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0edd904c-9217-4174-9b06-7fbb1ff409ce')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-0edd904c-9217-4174-9b06-7fbb1ff409ce button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-0edd904c-9217-4174-9b06-7fbb1ff409ce');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8e54cf48-033a-4a02-8894-b7f0409e2d27\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8e54cf48-033a-4a02-8894-b7f0409e2d27')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8e54cf48-033a-4a02-8894-b7f0409e2d27 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tabla_frecuencias",
              "summary": "{\n  \"name\": \"tabla_frecuencias\",\n  \"rows\": 60,\n  \"fields\": [\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 18,\n        \"max\": 99,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          18,\n          26,\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frecuencias\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frec. Relativa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.009144168590366188,\n        \"min\": 0.01,\n        \"max\": 0.05,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.03,\n          0.05,\n          0.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frecuencias %\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9144168590366187,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3.0,\n          5.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 43
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "#calcular la frecuencia acumulada\n",
        "tabla_frecuencias[\"Frecc. Acumulada\"]=tabla_frecuencias[\"frecuencias\"].cumsum()"
      ],
      "metadata": {
        "id": "G09Jo8Hkoa_2"
      },
      "execution_count": 47,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tabla_frecuencias"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "6U7lZxyVobCb",
        "outputId": "6f9af63b-f710-45f3-cbd0-28d7c41f6bd5"
      },
      "execution_count": 48,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    edad  frecuencias  frec. Relativa  frecuencias %  Frecc. Acumulada\n",
              "27    18            1            0.01            1.0                 1\n",
              "32    19            1            0.01            1.0                 2\n",
              "8     20            3            0.03            3.0                 5\n",
              "45    22            1            0.01            1.0                 6\n",
              "51    23            1            0.01            1.0                 7\n",
              "53    26            1            0.01            1.0                 8\n",
              "5     28            3            0.03            3.0                11\n",
              "9     29            2            0.02            2.0                13\n",
              "26    30            2            0.02            2.0                15\n",
              "36    32            1            0.01            1.0                16\n",
              "18    33            2            0.02            2.0                18\n",
              "25    34            2            0.02            2.0                20\n",
              "33    35            1            0.01            1.0                21\n",
              "17    36            2            0.02            2.0                23\n",
              "48    38            1            0.01            1.0                24\n",
              "2     39            4            0.04            4.0                28\n",
              "49    40            1            0.01            1.0                29\n",
              "21    42            2            0.02            2.0                31\n",
              "41    43            1            0.01            1.0                32\n",
              "55    44            1            0.01            1.0                33\n",
              "58    45            1            0.01            1.0                34\n",
              "10    46            2            0.02            2.0                36\n",
              "22    47            2            0.02            2.0                38\n",
              "16    48            2            0.02            2.0                40\n",
              "42    49            1            0.01            1.0                41\n",
              "56    50            1            0.01            1.0                42\n",
              "6     52            3            0.03            3.0                45\n",
              "29    53            1            0.01            1.0                46\n",
              "20    55            2            0.02            2.0                48\n",
              "3     56            3            0.03            3.0                51\n",
              "47    57            1            0.01            1.0                52\n",
              "54    58            1            0.01            1.0                53\n",
              "12    59            2            0.02            2.0                55\n",
              "11    60            2            0.02            2.0                57\n",
              "52    61            1            0.01            1.0                58\n",
              "28    62            1            0.01            1.0                59\n",
              "35    63            1            0.01            1.0                60\n",
              "40    64            1            0.01            1.0                61\n",
              "13    66            2            0.02            2.0                63\n",
              "0     67            5            0.05            5.0                68\n",
              "38    69            1            0.01            1.0                69\n",
              "44    71            1            0.01            1.0                70\n",
              "24    72            2            0.02            2.0                72\n",
              "39    74            1            0.01            1.0                73\n",
              "1     76            4            0.04            4.0                77\n",
              "15    77            2            0.02            2.0                79\n",
              "7     78            3            0.03            3.0                82\n",
              "31    79            1            0.01            1.0                83\n",
              "50    81            1            0.01            1.0                84\n",
              "19    83            2            0.02            2.0                86\n",
              "34    84            1            0.01            1.0                87\n",
              "37    85            1            0.01            1.0                88\n",
              "23    86            2            0.02            2.0                90\n",
              "59    88            1            0.01            1.0                91\n",
              "4     89            3            0.03            3.0                94\n",
              "46    91            1            0.01            1.0                95\n",
              "43    93            1            0.01            1.0                96\n",
              "14    96            2            0.02            2.0                98\n",
              "30    97            1            0.01            1.0                99\n",
              "57    99            1            0.01            1.0               100"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-775bd581-c9ac-45c3-9976-d069a96981cf\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>edad</th>\n",
              "      <th>frecuencias</th>\n",
              "      <th>frec. Relativa</th>\n",
              "      <th>frecuencias %</th>\n",
              "      <th>Frecc. Acumulada</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>18</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>1</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>19</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>2</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>20</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "      <td>5</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>22</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>6</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>51</th>\n",
              "      <td>23</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>7</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>53</th>\n",
              "      <td>26</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>8</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>28</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "      <td>11</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>29</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>30</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>15</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>32</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>33</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>18</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>34</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>20</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>35</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>21</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>36</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>23</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>38</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>24</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>39</td>\n",
              "      <td>4</td>\n",
              "      <td>0.04</td>\n",
              "      <td>4.0</td>\n",
              "      <td>28</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>40</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>29</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>42</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>31</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>43</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>32</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>55</th>\n",
              "      <td>44</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>33</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>58</th>\n",
              "      <td>45</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>34</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>46</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>36</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>47</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>38</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>48</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>40</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>49</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>41</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>56</th>\n",
              "      <td>50</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>42</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>52</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "      <td>45</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>53</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>46</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>55</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>48</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>56</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "      <td>51</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>57</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>52</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>54</th>\n",
              "      <td>58</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>53</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>59</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>55</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>60</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>57</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>52</th>\n",
              "      <td>61</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>58</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>62</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>59</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>63</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>60</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>64</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>61</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>66</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>63</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>67</td>\n",
              "      <td>5</td>\n",
              "      <td>0.05</td>\n",
              "      <td>5.0</td>\n",
              "      <td>68</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>69</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>69</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>71</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>70</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>72</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>72</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>74</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>73</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>76</td>\n",
              "      <td>4</td>\n",
              "      <td>0.04</td>\n",
              "      <td>4.0</td>\n",
              "      <td>77</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>77</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>79</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>78</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "      <td>82</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>79</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>83</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>50</th>\n",
              "      <td>81</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>84</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>83</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>84</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>87</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>85</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>86</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>90</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>59</th>\n",
              "      <td>88</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>91</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>89</td>\n",
              "      <td>3</td>\n",
              "      <td>0.03</td>\n",
              "      <td>3.0</td>\n",
              "      <td>94</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>91</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>95</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>93</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>96</td>\n",
              "      <td>2</td>\n",
              "      <td>0.02</td>\n",
              "      <td>2.0</td>\n",
              "      <td>98</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>97</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>99</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>57</th>\n",
              "      <td>99</td>\n",
              "      <td>1</td>\n",
              "      <td>0.01</td>\n",
              "      <td>1.0</td>\n",
              "      <td>100</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-775bd581-c9ac-45c3-9976-d069a96981cf')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-775bd581-c9ac-45c3-9976-d069a96981cf button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-775bd581-c9ac-45c3-9976-d069a96981cf');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-8a991e8a-fbc7-43bf-8afa-1fe4139715d1\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8a991e8a-fbc7-43bf-8afa-1fe4139715d1')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-8a991e8a-fbc7-43bf-8afa-1fe4139715d1 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tabla_frecuencias",
              "summary": "{\n  \"name\": \"tabla_frecuencias\",\n  \"rows\": 60,\n  \"fields\": [\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 22,\n        \"min\": 18,\n        \"max\": 99,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          18,\n          26,\n          63\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frecuencias\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0,\n        \"min\": 1,\n        \"max\": 5,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3,\n          5,\n          2\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frec. Relativa\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.009144168590366188,\n        \"min\": 0.01,\n        \"max\": 0.05,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          0.03,\n          0.05,\n          0.02\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frecuencias %\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 0.9144168590366187,\n        \"min\": 1.0,\n        \"max\": 5.0,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          3.0,\n          5.0,\n          2.0\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"Frecc. Acumulada\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 29,\n        \"min\": 1,\n        \"max\": 100,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          1,\n          8,\n          60\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 48
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "##Regla de Sturges\n"
      ],
      "metadata": {
        "id": "dQol-0yFobIk"
      },
      "execution_count": 49,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "#Regla idonea que sirve para calcular en la cantidad de clases o intervalos idoneos\n",
        "#$\n",
        "#c=1 + log_2(n)\n",
        "#$"
      ],
      "metadata": {
        "id": "Re85JvZvobN8"
      },
      "execution_count": 51,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import math"
      ],
      "metadata": {
        "id": "IXCYTQ-0obSa"
      },
      "execution_count": 52,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "import statistics"
      ],
      "metadata": {
        "id": "yqtPMXrEobYb"
      },
      "execution_count": 54,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "print(edades)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "QuwjvTamobcP",
        "outputId": "21058963-77f9-43aa-d61a-277eb4a15530"
      },
      "execution_count": 55,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "[43, 96, 47, 71, 67, 39, 39, 22, 91, 52, 57, 78, 38, 42, 56, 40, 67, 34, 30, 81, 23, 47, 78, 77, 83, 78, 76, 46, 60, 67, 61, 52, 20, 20, 26, 58, 44, 66, 29, 56, 59, 48, 46, 59, 50, 39, 28, 76, 99, 45, 20, 93, 76, 56, 49, 34, 89, 77, 42, 72, 33, 28, 36, 39, 36, 60, 89, 69, 72, 85, 83, 32, 84, 28, 52, 97, 48, 53, 62, 79, 67, 67, 64, 86, 18, 89, 33, 66, 55, 19, 35, 63, 55, 76, 29, 86, 74, 30, 96, 88]\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "df_edades_sturges= pd.DataFrame({\"edad\":edades})\n",
        "df_edades_sturges"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 423
        },
        "id": "D9eWpQXXobkI",
        "outputId": "fe13139f-d82a-40c2-e969-e102a7921734"
      },
      "execution_count": 58,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "    edad\n",
              "0     43\n",
              "1     96\n",
              "2     47\n",
              "3     71\n",
              "4     67\n",
              "..   ...\n",
              "95    86\n",
              "96    74\n",
              "97    30\n",
              "98    96\n",
              "99    88\n",
              "\n",
              "[100 rows x 1 columns]"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-68f6bf26-16cd-4ee8-adba-126bd8efa69e\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>edad</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>43</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>47</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>71</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>67</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>95</th>\n",
              "      <td>86</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>96</th>\n",
              "      <td>74</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>97</th>\n",
              "      <td>30</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>98</th>\n",
              "      <td>96</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>99</th>\n",
              "      <td>88</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>100 rows × 1 columns</p>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-68f6bf26-16cd-4ee8-adba-126bd8efa69e')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-68f6bf26-16cd-4ee8-adba-126bd8efa69e button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-68f6bf26-16cd-4ee8-adba-126bd8efa69e');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-621b1eb2-38ba-4b96-a550-506247e41a2a\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-621b1eb2-38ba-4b96-a550-506247e41a2a')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-621b1eb2-38ba-4b96-a550-506247e41a2a button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "df_edades_sturges",
              "summary": "{\n  \"name\": \"df_edades_sturges\",\n  \"rows\": 100,\n  \"fields\": [\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 21,\n        \"min\": 18,\n        \"max\": 99,\n        \"num_unique_values\": 60,\n        \"samples\": [\n          43,\n          39,\n          45\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 58
        }
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "Calcular intervalos con la regla de Sturges"
      ],
      "metadata": {
        "id": "wSdChc713iSn"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "n=len(edades)\n",
        "k=int(1+math.log2(n))\n",
        "print(\"valor n =\", n)\n",
        "print(\"valor de k=\" , k)"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "AktaZidU3CP0",
        "outputId": "603862b0-6389-4350-a115-c141e5f1115b"
      },
      "execution_count": 61,
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "valor n = 100\n",
            "valor de k= 7\n"
          ]
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(edades, rwidth=0.50)\n",
        "plt.title(\"Histograma de edades basado en valores de mathplotlib\")\n"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 469
        },
        "id": "hUDuCxQGobnU",
        "outputId": "91541872-2a73-4298-abf1-5dd16442b231"
      },
      "execution_count": 64,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0.5, 1.0, 'Histograma de edades basado en valores de mathplotlib')"
            ]
          },
          "metadata": {},
          "execution_count": 64
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tabla_frecuencias_Sturges=pd.cut(df_edades_sturges[\"edad\"],bins=k).value_counts().reset_index()\n",
        "tabla_frecuencias_Sturges"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "8burFRFd5v6F",
        "outputId": "d3ba1392-ae1e-447c-8e19-f4ebffebca81"
      },
      "execution_count": 69,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              index  edad\n",
              "0  (75.857, 87.429]    17\n",
              "1  (29.571, 41.143]    16\n",
              "2  (41.143, 52.714]    16\n",
              "3  (52.714, 64.286]    16\n",
              "4  (17.919, 29.571]    13\n",
              "5  (64.286, 75.857]    12\n",
              "6    (87.429, 99.0]    10"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-320a9332-4d7c-46a8-84a4-3d8079ab4444\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>index</th>\n",
              "      <th>edad</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(75.857, 87.429]</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(29.571, 41.143]</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(41.143, 52.714]</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(52.714, 64.286]</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(17.919, 29.571]</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>(64.286, 75.857]</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>(87.429, 99.0]</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-320a9332-4d7c-46a8-84a4-3d8079ab4444')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-320a9332-4d7c-46a8-84a4-3d8079ab4444 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-320a9332-4d7c-46a8-84a4-3d8079ab4444');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-bb3919d7-9807-4f88-ba0a-34c4f0dbd708\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-bb3919d7-9807-4f88-ba0a-34c4f0dbd708')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-bb3919d7-9807-4f88-ba0a-34c4f0dbd708 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tabla_frecuencias_Sturges",
              "summary": "{\n  \"name\": \"tabla_frecuencias_Sturges\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"index\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"(75.857, 87.429]\",\n          \"(29.571, 41.143]\",\n          \"(64.286, 75.857]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"edad\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 10,\n        \"max\": 17,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          16,\n          10,\n          13\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 69
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tabla_frecuencias_Sturges.columns = [\"clase\",\"frecuencia\"]"
      ],
      "metadata": {
        "id": "UcHD4G475v9D"
      },
      "execution_count": 70,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "tabla_frecuencias_Sturges=tabla_frecuencias_Sturges.sort_values(by=\"clase\")\n",
        "tabla_frecuencias_Sturges"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 269
        },
        "id": "-43Z8DdR5wFY",
        "outputId": "e2e347ee-9c82-4462-b100-60280c5803f6"
      },
      "execution_count": 73,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "              clase  frecuencia\n",
              "4  (17.919, 29.571]          13\n",
              "1  (29.571, 41.143]          16\n",
              "2  (41.143, 52.714]          16\n",
              "3  (52.714, 64.286]          16\n",
              "5  (64.286, 75.857]          12\n",
              "0  (75.857, 87.429]          17\n",
              "6    (87.429, 99.0]          10"
            ],
            "text/html": [
              "\n",
              "  <div id=\"df-d57ad47d-4ee7-4315-8b7b-8596f72c1ba5\" class=\"colab-df-container\">\n",
              "    <div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>clase</th>\n",
              "      <th>frecuencia</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>(17.919, 29.571]</td>\n",
              "      <td>13</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>(29.571, 41.143]</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>(41.143, 52.714]</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>(52.714, 64.286]</td>\n",
              "      <td>16</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>(64.286, 75.857]</td>\n",
              "      <td>12</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>(75.857, 87.429]</td>\n",
              "      <td>17</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>(87.429, 99.0]</td>\n",
              "      <td>10</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>\n",
              "    <div class=\"colab-df-buttons\">\n",
              "\n",
              "  <div class=\"colab-df-container\">\n",
              "    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d57ad47d-4ee7-4315-8b7b-8596f72c1ba5')\"\n",
              "            title=\"Convert this dataframe to an interactive table.\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n",
              "    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n",
              "  </svg>\n",
              "    </button>\n",
              "\n",
              "  <style>\n",
              "    .colab-df-container {\n",
              "      display:flex;\n",
              "      gap: 12px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert {\n",
              "      background-color: #E8F0FE;\n",
              "      border: none;\n",
              "      border-radius: 50%;\n",
              "      cursor: pointer;\n",
              "      display: none;\n",
              "      fill: #1967D2;\n",
              "      height: 32px;\n",
              "      padding: 0 0 0 0;\n",
              "      width: 32px;\n",
              "    }\n",
              "\n",
              "    .colab-df-convert:hover {\n",
              "      background-color: #E2EBFA;\n",
              "      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "      fill: #174EA6;\n",
              "    }\n",
              "\n",
              "    .colab-df-buttons div {\n",
              "      margin-bottom: 4px;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert {\n",
              "      background-color: #3B4455;\n",
              "      fill: #D2E3FC;\n",
              "    }\n",
              "\n",
              "    [theme=dark] .colab-df-convert:hover {\n",
              "      background-color: #434B5C;\n",
              "      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n",
              "      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n",
              "      fill: #FFFFFF;\n",
              "    }\n",
              "  </style>\n",
              "\n",
              "    <script>\n",
              "      const buttonEl =\n",
              "        document.querySelector('#df-d57ad47d-4ee7-4315-8b7b-8596f72c1ba5 button.colab-df-convert');\n",
              "      buttonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "\n",
              "      async function convertToInteractive(key) {\n",
              "        const element = document.querySelector('#df-d57ad47d-4ee7-4315-8b7b-8596f72c1ba5');\n",
              "        const dataTable =\n",
              "          await google.colab.kernel.invokeFunction('convertToInteractive',\n",
              "                                                    [key], {});\n",
              "        if (!dataTable) return;\n",
              "\n",
              "        const docLinkHtml = 'Like what you see? Visit the ' +\n",
              "          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n",
              "          + ' to learn more about interactive tables.';\n",
              "        element.innerHTML = '';\n",
              "        dataTable['output_type'] = 'display_data';\n",
              "        await google.colab.output.renderOutput(dataTable, element);\n",
              "        const docLink = document.createElement('div');\n",
              "        docLink.innerHTML = docLinkHtml;\n",
              "        element.appendChild(docLink);\n",
              "      }\n",
              "    </script>\n",
              "  </div>\n",
              "\n",
              "\n",
              "<div id=\"df-d167185a-c7f4-4f91-aebe-317e08140d32\">\n",
              "  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d167185a-c7f4-4f91-aebe-317e08140d32')\"\n",
              "            title=\"Suggest charts\"\n",
              "            style=\"display:none;\">\n",
              "\n",
              "<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n",
              "     width=\"24px\">\n",
              "    <g>\n",
              "        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n",
              "    </g>\n",
              "</svg>\n",
              "  </button>\n",
              "\n",
              "<style>\n",
              "  .colab-df-quickchart {\n",
              "      --bg-color: #E8F0FE;\n",
              "      --fill-color: #1967D2;\n",
              "      --hover-bg-color: #E2EBFA;\n",
              "      --hover-fill-color: #174EA6;\n",
              "      --disabled-fill-color: #AAA;\n",
              "      --disabled-bg-color: #DDD;\n",
              "  }\n",
              "\n",
              "  [theme=dark] .colab-df-quickchart {\n",
              "      --bg-color: #3B4455;\n",
              "      --fill-color: #D2E3FC;\n",
              "      --hover-bg-color: #434B5C;\n",
              "      --hover-fill-color: #FFFFFF;\n",
              "      --disabled-bg-color: #3B4455;\n",
              "      --disabled-fill-color: #666;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart {\n",
              "    background-color: var(--bg-color);\n",
              "    border: none;\n",
              "    border-radius: 50%;\n",
              "    cursor: pointer;\n",
              "    display: none;\n",
              "    fill: var(--fill-color);\n",
              "    height: 32px;\n",
              "    padding: 0;\n",
              "    width: 32px;\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart:hover {\n",
              "    background-color: var(--hover-bg-color);\n",
              "    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n",
              "    fill: var(--button-hover-fill-color);\n",
              "  }\n",
              "\n",
              "  .colab-df-quickchart-complete:disabled,\n",
              "  .colab-df-quickchart-complete:disabled:hover {\n",
              "    background-color: var(--disabled-bg-color);\n",
              "    fill: var(--disabled-fill-color);\n",
              "    box-shadow: none;\n",
              "  }\n",
              "\n",
              "  .colab-df-spinner {\n",
              "    border: 2px solid var(--fill-color);\n",
              "    border-color: transparent;\n",
              "    border-bottom-color: var(--fill-color);\n",
              "    animation:\n",
              "      spin 1s steps(1) infinite;\n",
              "  }\n",
              "\n",
              "  @keyframes spin {\n",
              "    0% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "      border-left-color: var(--fill-color);\n",
              "    }\n",
              "    20% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    30% {\n",
              "      border-color: transparent;\n",
              "      border-left-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    40% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-top-color: var(--fill-color);\n",
              "    }\n",
              "    60% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "    }\n",
              "    80% {\n",
              "      border-color: transparent;\n",
              "      border-right-color: var(--fill-color);\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "    90% {\n",
              "      border-color: transparent;\n",
              "      border-bottom-color: var(--fill-color);\n",
              "    }\n",
              "  }\n",
              "</style>\n",
              "\n",
              "  <script>\n",
              "    async function quickchart(key) {\n",
              "      const quickchartButtonEl =\n",
              "        document.querySelector('#' + key + ' button');\n",
              "      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n",
              "      quickchartButtonEl.classList.add('colab-df-spinner');\n",
              "      try {\n",
              "        const charts = await google.colab.kernel.invokeFunction(\n",
              "            'suggestCharts', [key], {});\n",
              "      } catch (error) {\n",
              "        console.error('Error during call to suggestCharts:', error);\n",
              "      }\n",
              "      quickchartButtonEl.classList.remove('colab-df-spinner');\n",
              "      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n",
              "    }\n",
              "    (() => {\n",
              "      let quickchartButtonEl =\n",
              "        document.querySelector('#df-d167185a-c7f4-4f91-aebe-317e08140d32 button');\n",
              "      quickchartButtonEl.style.display =\n",
              "        google.colab.kernel.accessAllowed ? 'block' : 'none';\n",
              "    })();\n",
              "  </script>\n",
              "</div>\n",
              "    </div>\n",
              "  </div>\n"
            ],
            "application/vnd.google.colaboratory.intrinsic+json": {
              "type": "dataframe",
              "variable_name": "tabla_frecuencias_Sturges",
              "summary": "{\n  \"name\": \"tabla_frecuencias_Sturges\",\n  \"rows\": 7,\n  \"fields\": [\n    {\n      \"column\": \"clase\",\n      \"properties\": {\n        \"dtype\": \"category\",\n        \"num_unique_values\": 7,\n        \"samples\": [\n          \"(17.919, 29.571]\",\n          \"(29.571, 41.143]\",\n          \"(75.857, 87.429]\"\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    },\n    {\n      \"column\": \"frecuencia\",\n      \"properties\": {\n        \"dtype\": \"number\",\n        \"std\": 2,\n        \"min\": 10,\n        \"max\": 17,\n        \"num_unique_values\": 5,\n        \"samples\": [\n          16,\n          10,\n          12\n        ],\n        \"semantic_type\": \"\",\n        \"description\": \"\"\n      }\n    }\n  ]\n}"
            }
          },
          "metadata": {},
          "execution_count": 73
        }
      ]
    },
    {
      "cell_type": "code",
      "source": [
        "tabla_frecuencias_Sturges[\"Frecuencia Relativa\"]=tabla_frecuencias_Sturges[\"frecuencia\"]/n\n",
        "tabla_frecuencias_Sturges[\"Frecuencia Porcentual\"]=tabla_frecuencias_Sturges[\"frecuencia\"]/n*100\n",
        "tabla_frecuencias_Sturges[\"Frecuencia Acumulada\"]=tabla_frecuencias_Sturges[\"frecuencia\"].cumsum()"
      ],
      "metadata": {
        "id": "LEbhWu-vobqR"
      },
      "execution_count": 79,
      "outputs": []
    },
    {
      "cell_type": "code",
      "source": [
        "plt.hist(df_edades_sturges[\"edad\"], bins=k, rwidth=0.95)\n",
        "plt.title(\"HIstograma por medio de Sturges\")\n",
        "plt.xlabel(\"edades\")\n",
        "plt.ylabel(\"frecuencia\")"
      ],
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 489
        },
        "id": "MH5AoDSh9-Vy",
        "outputId": "80ce0264-bae8-4545-a498-e30f813cb59f"
      },
      "execution_count": 83,
      "outputs": [
        {
          "output_type": "execute_result",
          "data": {
            "text/plain": [
              "Text(0, 0.5, 'frecuencia')"
            ]
          },
          "metadata": {},
          "execution_count": 83
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 640x480 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ]
    }
  ]
}